trigger:
  branches:
    exclude:
      - "*"

pr: none

pool:
  vmImage: ubuntu-latest

variables:
  - group: MasteringLinuxDev # Link to the variable group "MasteringLinuxDev"
  - name: resourceGroupName
    value: "rgMasteringLinux"
  - name: location
    value: "northeurope"

steps:
  - script: |
      echo $(adminPassword)
      echo $(resourceGroupName)
      echo $(location)

  - task: AzureCLI@2
    inputs:
      azureSubscription: "ServicePrincipalHotmail"
      scriptType: "bash"
      scriptLocation: "inlineScript"
      inlineScript: |
        az group create --name $(resourceGroupName) --location "$(location)"

  - task: AzureResourceManagerTemplateDeployment@3
    inputs:
      deploymentScope: "Resource Group"
      azureResourceManagerConnection: "ServicePrincipalHotmail"
      subscriptionId: "36a7d4b6-e14b-4e56-93b6-f04b550d58f6"
      action: "Create Or Update Resource Group"
      resourceGroupName: $(resourceGroupName)
      location: $(location)
      templateLocation: "URL of the file"
      csmFileLink: "https://raw.githubusercontent.com/pedromonteiroleite/MasteringLinux/main/Templates/vmCentOsFresh/template.json"
      csmParametersFileLink: "https://raw.githubusercontent.com/pedromonteiroleite/MasteringLinux/main/Templates/vmCentOsFresh/parameters.json"
      deploymentMode: "Incremental"
      deploymentName: "DeployPipelineTemplate"
      overrideParameters: "-location $(location) -adminPassword $(adminPassword)"

  - task: Docker@2
    displayName: "Build and Push Docker Image"
    inputs:
      containerRegistry: "MyACR" # Replace 'MyACR' with the name of your Azure Container Registry
      repository: "myapp" # Replace 'myapp' with the name of your container image repository
      command: "buildAndPush"
      Dockerfile: "**/Dockerfile" # Path to your Dockerfile, adjust as needed
      tags: |
        $(Build.BuildId)
      arguments: "-t $(dockerRegistryServiceConnection)"

  - script: |
      az acr task create \
        --registry MyACR \
        --name buildtask \
        --image myapp:$(Build.BuildId) \
        --file ./path/to/Dockerfile \
        --context . \
        --git-access-token $(System.AccessToken)
    displayName: "Create ACR Build Task"
